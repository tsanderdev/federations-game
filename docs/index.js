const useState=React.useState,MEGABYTE=1048576,Screen=Object.freeze({Main:"main",Settings:"settings",About:"about",Install:"install"}),supportedLanguages=["en","de"],LOCALSTORAGE_LANGUAGE="language";var strings={};function template(templ,...params){return templ?Mustache.render(templ,Object.fromEntries(params.entries())):""}{let cssvars=["--navbar-color","--button-color","--navbar-hover-color","--button-hover-color","--navbar-active-color","--border-color","--background-color","--text-color"];for(const v of cssvars){const col=window.localStorage.getItem(v);col&&document.documentElement.style.setProperty(v,col)}}function roundDecimals(num,dec){return(Math.round(num*Math.pow(10,dec))/Math.pow(10,dec)).toString()}function Navbar(props){return React.createElement("div",{className:"navbar"},React.createElement("button",{type:"button",onClick:function(){props.setScreen(Screen.Main)},className:"navitem"},strings.game),React.createElement("button",{type:"button",onClick:function(){props.setScreen(Screen.Settings)},className:"navitem"},strings.settings),React.createElement("button",{type:"button",onClick:function(){props.setScreen(Screen.About)},className:"navitem"},strings.about),React.createElement("button",{type:"button",onClick:function(){props.setScreen(Screen.Install)},className:"navitem"},strings.install))}function MainScreen(){return React.createElement("div",null,React.createElement("h2",null,strings.appname))}class ColorPicker extends React.Component{constructor(props){super(props)}render(){return React.createElement("div",{className:"color-picker"},React.createElement("label",{htmlFor:this.props.name},this.props.name),React.createElement("input",{type:"color",id:this.props.name,onInput:e=>{document.documentElement.style.setProperty(this.props.property,e.target.value),window.localStorage.setItem(this.props.property,e.target.value),this.forceUpdate()},value:getComputedStyle(document.documentElement).getPropertyValue(this.props.property)}))}}class StorageComponent extends React.Component{constructor(props){super(props),this.state={estimate:{usage:0,quota:0},persistent:!1},navigator.storage.persisted().then(persistent=>{this.setState({estimate:this.state.estimate,persistent:persistent})}),navigator.storage.estimate().then(estimate=>{this.setState({estimate:estimate,persistent:this.state.persistent})}),this.storagelistener=()=>{navigator.storage.estimate().then(estimate=>{this.setState({estimate:estimate,persistent:this.state.persistent}),this.forceUpdate()})}}componentDidMount(){window.addEventListener("storage",this.storagelistener)}componentWillUnmount(){window.removeEventListener("storage",this.storagelistener)}render(){var pbutton=this.state.persistent?null:React.createElement("button",{onClick:()=>navigator.storage.persist().then(p=>this.setState({estimate:this.state.estimate,persistent:p}))},strings.makePersistent);return React.createElement("div",null,React.createElement("h2",null,strings.storage),React.createElement("p",{className:"nowrap"},template(strings.usage,roundDecimals(this.state.estimate.usage/MEGABYTE,2),roundDecimals(this.state.estimate.quota/MEGABYTE,2))),React.createElement("div",null,template(strings.persistent,this.state.persistent?strings.yes:strings.no),React.createElement(Spoiler,{text:strings.explanation},strings.persistentExplain)),pbutton,React.createElement("button",{onClick:()=>{confirm(strings.deleteAll+"?")&&(window.localStorage.clear(),caches&&caches.keys().then(keys=>{for(const k of keys)caches.delete(k)}),indexedDB&&indexedDB.databases&&indexedDB.databases.then(dbs=>{for(const db of dbs)indexedDB.deleteDatabase(db)}))}},strings.deleteAll),React.createElement("button",{onClick:()=>{if(Clipboard){let json="{";for(var i=0;i<localStorage.length;i++){var key=localStorage.key(i);json+=JSON.stringify(key)+":"+JSON.stringify(localStorage.getItem(key))}json+="}",navigator.clipboard.writeText(json).then(()=>alert(strings.settingsExported))}}},strings.exportSettings),React.createElement("button",{onClick:()=>{var json=prompt();try{json=JSON.parse(json);for(var[key,value]of Object.entries(json))localStorage.setItem(key,value);location.reload()}catch(error){}}},strings.importSettings))}}function Spoiler(props){const[hidden,setHidden]=useState(!0);return React.createElement("div",null,React.createElement("button",{onClick:()=>{setHidden(!hidden)},className:"spoiler"},props.text||strings.spoiler),React.createElement("div",{style:{height:hidden?"0px":"auto",overflow:"hidden",border:hidden?"none":"1px dashed var(--border-color)"}},React.createElement("div",{className:"spoiler-content"},props.children)))}function SettingsScreen(props){let languageNames=new Intl.DisplayNames([props.language],{type:"language"});return React.createElement("div",{className:"settings"},React.createElement("div",null,React.createElement("h2",null,strings.settings),React.createElement("h3",null,"Sprache"),React.createElement("p",null,supportedLanguages.map(l=>React.createElement("button",{className:"lang-button",key:l,onClick:()=>props.setLanguage(l)},languageNames.of(l))))),React.createElement(StorageComponent,null),React.createElement("div",null,React.createElement("h2",null,strings.theme),React.createElement(Spoiler,null,React.createElement(ColorPicker,{name:strings.backgroundColor,property:"--background-color"}),React.createElement(ColorPicker,{name:strings.textColor,property:"--text-color"}),React.createElement(ColorPicker,{name:strings.navbarColor,property:"--navbar-color"}),React.createElement(ColorPicker,{name:strings.navbarHoverColor,property:"--navbar-hover-color"}),React.createElement(ColorPicker,{name:strings.navbarActiveColor,property:"--navbar-active-color"}),React.createElement(ColorPicker,{name:strings.borderColor,property:"--border-color"}),React.createElement(ColorPicker,{name:strings.buttonColor,property:"--button-color"}),React.createElement(ColorPicker,{name:strings.buttonHoverColor,property:"--button-hover-color"}))),React.createElement("div",null,React.createElement("h2",null,strings.archivements)))}function AboutScreen(){return React.createElement("div",null,React.createElement("h2",null,strings.about))}function InstallScreen(){return React.createElement("div",null,React.createElement("h2",null,strings.install))}function App(props){switch(props.screen){default:case Screen.Main:return React.createElement("div",{className:"main"},React.createElement(MainScreen,null));case Screen.Settings:return React.createElement("div",{className:"main"},React.createElement(SettingsScreen,{language:props.language,setLanguage:props.setLanguage}));case Screen.About:return React.createElement("div",{className:"main"},React.createElement(AboutScreen,null));case Screen.Install:return React.createElement("div",{className:"main"},React.createElement(InstallScreen,null))}}class Container extends React.Component{constructor(page){super(page);page=new URL(document.URL).searchParams.get("page");this.state={screen:Object.values(Screen).includes(page)?page:Screen.Main,language:this.checkLanguage(window.localStorage.getItem(LOCALSTORAGE_LANGUAGE)||navigator.language||navigator.userLanguage||(navigator.languages?navigator.languages[0]:"en"))},this.getStrings(this.state.language),this.setLanguage=this.setLanguage.bind(this),this.setScreen=this.setScreen.bind(this)}checkLanguage(lang){return supportedLanguages.includes(lang)?lang:supportedLanguages[0]}getStrings(lang){fetch("strings/"+lang+".json").then(response=>response.json(),()=>{}).then(data=>{strings=data,this.forceUpdate(),document.title=strings.appname},()=>"language file JSON syntax error")}setLanguage(lang){(lang=this.checkLanguage(lang))!==this.state.language&&this.getStrings(lang),this.setState({screen:this.state.screen,language:lang}),window.localStorage.setItem(LOCALSTORAGE_LANGUAGE,lang)}setScreen(screen){if(this.setState({screen:screen,language:this.state.language}),screen===Screen.Main){let url=new URL(document.URL);url.searchParams.delete("page"),history.replaceState(null,document.title,url.toString())}else{let url=new URL(document.URL);url.searchParams.set("page",screen),history.replaceState(null,document.title,url.toString())}}render(){return React.createElement("div",null,React.createElement(Navbar,{setScreen:this.setScreen,screen:this.state.screen}),React.createElement(App,{screen:this.state.screen,setLanguage:this.setLanguage,language:this.state.language}))}}ReactDOM.render(React.createElement(Container,null),document.querySelector("#container"));
//# sourceMappingURL=index.js.map